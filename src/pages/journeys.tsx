import { inferRouterOutputs } from "@trpc/server";
import { type NextPage } from "next";
import Head from "next/head";
import React, { ButtonHTMLAttributes, useEffect, useState } from "react";

import type { AppRouter } from '../server/api/root';

import { api } from "../utils/api";

type RouterOutput = inferRouterOutputs<AppRouter>;

type JourneyGetOutput = RouterOutput['journeys']['getJourneys']

const Journeys: NextPage = () => {
  const [journeys, setJourneys] = useState<JourneyGetOutput>();
  const [pagination, setPagination] = useState<number>(0);
  
  const { data } = api.journeys.getJourneys.useQuery({ skip: pagination});

  useEffect(() => {
    if (data) setJourneys(data);
  }, [data, pagination]);
  
  if (!journeys) {
    return (
      <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen items-center justify-center bg-slate-800">
        <h1 className="text-white text-4xl pt-4 mb-4 font-extrabold leading-none text-center">Journeys</h1>
        <h2>loading</h2>
      </main>
    </>
    )
  }

  function handlePaginationPrev() {
    if (pagination !== 0) setPagination(pagination - 1);
  }

  function handlePaginationNext() {
    if (!journeys) return;
    if (pagination*10 < journeys[0])setPagination(pagination + 1);
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen items-center justify-center bg-slate-800">
        <h1 className="text-white text-4xl pt-4 mb-4 font-extrabold leading-none text-center">Journeys</h1>
        <div className="relative overflow-x-auto shadow-md max-w-2xl mx-auto my-4 rounded">
          <table className="w-full text-sm text-left text-gray-300">
            <thead className="uppercase bg-gray-400 text-gray-900">
              <tr>
                <th scope="col" className="p-4">Departure station</th>
                <th scope="col" className="p-4">Return station</th>
                <th scope="col" className="p-4">Distance</th>
                <th scope="col" className="p-4">Duration</th>
              </tr>
            </thead>
            <tbody>
              {journeys[1].map(j => (
              <tr className="bg-gray-300 border-b hover:bg-gray-600 text-gray-900" key={j.id}>
                <td className="p-4">{j.departure_station.name}</td>
                <td className="p-4">{j.return_station.name}</td>
                <td className="p-4">{(j.distance / 1000).toPrecision(3)} km</td>
                <td className="p-4">{(j.duration / 60).toPrecision(2)} minutes</td>
              </tr>
              ))}
            </tbody>
          </table>
        </div>
        <div className="flex flex-col items-center">
          <span className="text-sm text-gray-400">
              Showing <span className="font-semibold text-white">{pagination*10 + 1}</span> to <span className="font-semibold text-white">{pagination*10 + 10}</span> of <span className="font-semibold text-white">{journeys[0]}</span> Entries
          </span>
          <div className="inline-flex mt-2 xs:mt-0">
            <button onClick={handlePaginationPrev} className="inline-flex items-center px-4 py-2 text-sm font-medium rounded-l  bg-gray-500 border-gray-700 text-white hover:bg-gray-700 hover:text-white" >
                <svg aria-hidden="true" className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                Prev
            </button>
            <button onClick={handlePaginationNext} className="inline-flex items-center px-4 py-2 text-sm font-medium border-0 border-l rounded-r  bg-gray-500 border-gray-700 text-white hover:bg-gray-700 hover:text-white">
                Next
                <svg aria-hidden="true" className="w-5 h-5 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </button>
          </div>
        </div>
      </main>
    </>
  );
};

export default Journeys;
