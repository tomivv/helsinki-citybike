import { type NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import Alert from "../../components/Alert";

const Home: NextPage = () => {
  const [file, setFile] = useState<File | undefined>(undefined);
  const [alertMsg, setAlertMsg] = useState('');
  const [alertVisible, setAlertVisible] = useState(false);

  useEffect(() => {
    // clear alert in 5 seconds
    if (alertVisible) {
      setTimeout(() => {
        setAlertVisible(false);
      }, 5 * 1000)
    }
  }, [alertVisible]);

  function handelInputChange (e: React.ChangeEvent<HTMLInputElement>) {
    if(!e.target.files) {
      return;
    }
    setFile(e.target.files[0]);
    if(e.target.files[0]) {
      console.table(e.target.files[0]);
    }
  }

  function handleFormSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();

    if(typeof file == 'undefined') {
      setAlertMsg("Please select a file");
      setAlertVisible(true);
      return;
    }

    const formData = new FormData();
    formData.append("file", file as Blob);

    fetch(`http://localhost:8080/api/v1/journey/bulk`, {
      method: "POST",
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.status === 500) {
        setAlertMsg("There was error saving data. Please try again later!");
        setAlertVisible(true);
      }
      else {
        setAlertMsg("Successfully saved data");
        setAlertVisible(true);
      }
    })
    .catch(err => {
      setAlertMsg("There was error saving data. Please try again later!");
      setAlertVisible(true);
      console.log(err);
    });
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen items-center justify-center bg-slate-800">
        <h1 className="text-white text-4xl pt-4 mb-4 font-extrabold leading-none text-center">Add journeys</h1>
        <div className="max-w-xl mx-auto">
            <form onSubmit={handleFormSubmit}>
              <div className="mb-2">
                <label htmlFor="upload" className="block mb-2 text-sm font-medium text-white">Upload a csv-file</label>
                <input id="upload" type="file" onChange={handelInputChange} className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full"></input>
              </div>
              <button type="submit" className="text-white bg-sky-500 hover:bg-sky-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center">Upload</button>
            </form>
        </div>
        <Alert message={alertMsg} visible={alertVisible} />
      </main>
    </>
  );
};

export default Home;
